{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://excel-custom-functions-js/webpack/bootstrap","webpack://excel-custom-functions-js/webpack/runtime/global","webpack://excel-custom-functions-js/webpack/runtime/hasOwnProperty shorthand","webpack://excel-custom-functions-js/webpack/runtime/publicPath","webpack://excel-custom-functions-js/webpack/runtime/jsonp chunk loading","webpack://excel-custom-functions-js/./src/taskpane/taskpane.js","webpack://excel-custom-functions-js/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","class FormManagementSystem {\n    constructor() {\n        this.currentMonth = new Date();\n        this.forms = this.loadFromStorage();\n        this.init();\n    }\n\n    init() {\n        this.updateCurrentDate();\n        this.updateCurrentMonth();\n        this.renderForms();\n        this.updateStats();\n        this.setupEventListeners();\n\n        // Update date every minute\n        setInterval(() => this.updateCurrentDate(), 60000);\n    }\n\n    setupEventListeners() {\n        // Auto-save forms when typing\n        document.addEventListener('input', (e) => {\n            if (e.target.classList.contains('form-textarea')) {\n                this.autoSave();\n            }\n        });\n\n        // Handle Enter key in textareas\n        document.addEventListener('keydown', (e) => {\n            if (e.target.classList.contains('form-textarea') && e.key === 'Enter' && !e.shiftKey) {\n                e.preventDefault();\n                const textarea = e.target;\n                const start = textarea.selectionStart;\n                const end = textarea.selectionEnd;\n                textarea.value = textarea.value.substring(0, start) + '\\n' + textarea.value.substring(end);\n                textarea.selectionStart = textarea.selectionEnd = start + 1;\n                this.autoSave();\n            }\n        });\n    }\n\n    // Date and Time Functions\n    updateCurrentDate() {\n        const now = new Date();\n        const options = {\n            weekday: 'long',\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric'\n        };\n        document.getElementById('current-date').textContent = now.toLocaleDateString('en-US', options);\n    }\n\n    updateCurrentMonth() {\n        const monthNames = [\n            \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n        ];\n        const monthYear = `${monthNames[this.currentMonth.getMonth()]} ${this.currentMonth.getFullYear()}`;\n        document.getElementById('current-month').textContent = monthYear;\n        document.getElementById('nav-month').textContent = monthYear;\n    }\n\n    formatDate(date) {\n        const day = String(date.getDate()).padStart(2, '0');\n        const month = String(date.getMonth() + 1).padStart(2, '0');\n        const year = date.getFullYear();\n        return `${day}/${month}/${year}`;\n    }\n\n    formatDateTime(date) {\n        const dateStr = this.formatDate(date);\n        const timeStr = date.toLocaleTimeString('en-US', {\n            hour: '2-digit',\n            minute: '2-digit',\n            hour12: false\n        });\n        return `${dateStr} ${timeStr}`;\n    }\n\n    // Storage Functions\n    loadFromStorage() {\n        try {\n            const stored = localStorage.getItem('payroll-forms');\n            return stored ? JSON.parse(stored) : {};\n        } catch (error) {\n            console.error('Error loading from storage:', error);\n            return {};\n        }\n    }\n\n    saveToStorage() {\n        try {\n            localStorage.setItem('payroll-forms', JSON.stringify(this.forms));\n            this.updateLastUpdated();\n        } catch (error) {\n            console.error('Error saving to storage:', error);\n            this.showToast('Error saving data', 'error');\n        }\n    }\n\n    autoSave() {\n        // Debounced auto-save\n        clearTimeout(this.saveTimeout);\n        this.saveTimeout = setTimeout(() => {\n            this.saveAllForms();\n        }, 1000);\n    }\n\n    saveAllForms() {\n        const textareas = document.querySelectorAll('.form-textarea');\n        textareas.forEach(textarea => {\n            const formId = textarea.dataset.formId;\n            if (formId && this.forms[formId]) {\n                this.forms[formId].content = textarea.value;\n                this.forms[formId].lastModified = new Date().toISOString();\n            }\n        });\n        this.saveToStorage();\n    }\n\n    updateLastUpdated() {\n        const lastUpdated = new Date().toLocaleString();\n        document.getElementById('last-updated').textContent = lastUpdated;\n    }\n\n    // Form Management Functions\n    getMonthKey(date = this.currentMonth) {\n        return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n    }\n\n    getCurrentMonthForms() {\n        const monthKey = this.getMonthKey();\n        return Object.values(this.forms).filter(form =>\n            form.monthKey === monthKey\n        ).sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n    }\n\n    addNewForm() {\n        const now = new Date();\n        const formId = `form_${now.getTime()}`;\n        const monthKey = this.getMonthKey();\n\n        const newForm = {\n            id: formId,\n            createdAt: now.toISOString(),\n            lastModified: now.toISOString(),\n            monthKey: monthKey,\n            content: '',\n            date: this.formatDate(now)\n        };\n\n        this.forms[formId] = newForm;\n        this.saveToStorage();\n        this.renderForms();\n        this.updateStats();\n\n        // Focus on the new form's textarea\n        setTimeout(() => {\n            const newTextarea = document.querySelector(`[data-form-id=\"${formId}\"]`);\n            if (newTextarea) {\n                newTextarea.focus();\n            }\n        }, 100);\n\n        this.showToast('New form added successfully!');\n    }\n\n    deleteForm(formId) {\n        if (this.forms[formId]) {\n            delete this.forms[formId];\n            this.saveToStorage();\n            this.renderForms();\n            this.updateStats();\n            this.showToast('Form deleted successfully!');\n        }\n    }\n\n    duplicateForm(formId) {\n        if (this.forms[formId]) {\n            const originalForm = this.forms[formId];\n            const now = new Date();\n            const newFormId = `form_${now.getTime()}`;\n\n            const duplicatedForm = {\n                ...originalForm,\n                id: newFormId,\n                createdAt: now.toISOString(),\n                lastModified: now.toISOString(),\n                date: this.formatDate(now)\n            };\n\n            this.forms[newFormId] = duplicatedForm;\n            this.saveToStorage();\n            this.renderForms();\n            this.updateStats();\n            this.showToast('Form duplicated successfully!');\n        }\n    }\n\n    // Navigation Functions\n    changeMonth(direction) {\n        this.currentMonth.setMonth(this.currentMonth.getMonth() + direction);\n        this.updateCurrentMonth();\n        this.renderForms();\n    }\n\n    goToToday() {\n        this.currentMonth = new Date();\n        this.updateCurrentMonth();\n        this.renderForms();\n    }\n\n    // Rendering Functions\n    renderForms() {\n        const formsContainer = document.getElementById('forms-container');\n        const emptyState = document.getElementById('empty-state');\n        const currentMonthForms = this.getCurrentMonthForms();\n\n        formsContainer.innerHTML = '';\n\n        if (currentMonthForms.length === 0) {\n            emptyState.classList.remove('hidden');\n        } else {\n            emptyState.classList.add('hidden');\n            currentMonthForms.forEach(form => {\n                const formElement = document.createElement('div');\n                formElement.className = 'form-entry';\n                formElement.innerHTML = `\n                    <div class=\"form-header\">\n                        <div class=\"form-date\">Added on: ${form.date}</div>\n                        <div class=\"form-actions\">\n                            <button onclick=\"formSystem.duplicateForm('${form.id}')\">Duplicate</button>\n                            <button onclick=\"formSystem.deleteForm('${form.id}')\">Delete</button>\n                        </div>\n                    </div>\n                    <div class=\"form-content\">\n                        <textarea class=\"form-textarea\" data-form-id=\"${form.id}\" placeholder=\"Enter your comment here...\">${form.content}</textarea>\n                    </div>\n                `;\n                formsContainer.appendChild(formElement);\n            });\n        }\n    }\n\n    // Statistics Functions\n    updateStats() {\n        const totalForms = Object.keys(this.forms).length;\n        const monthForms = this.getCurrentMonthForms().length;\n\n        document.getElementById('total-forms').textContent = totalForms;\n        document.getElementById('month-forms').textContent = monthForms;\n    }\n\n    // Toast Notification\n    showToast(message, type = 'success') {\n        const toast = document.getElementById('toast');\n        const toastMessage = document.getElementById('toast-message');\n        toastMessage.textContent = message;\n        toast.className = `toast ${type}`;\n        toast.classList.add('show');\n\n        setTimeout(() => {\n            toast.classList.remove('show');\n        }, 3000);\n    }\n\n    // Export Functions\n    exportData() {\n        const exportModal = document.getElementById('export-modal');\n        exportModal.classList.add('show');\n    }\n\n    closeExportModal() {\n        const exportModal = document.getElementById('export-modal');\n        exportModal.classList.remove('show');\n    }\n\n    exportToJSON() {\n        const dataStr = JSON.stringify(this.forms, null, 2);\n        const dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\n\n        const exportFileDefaultName = 'payroll-forms.json';\n        const linkElement = document.createElement('a');\n        linkElement.setAttribute('href', dataUri);\n        linkElement.setAttribute('download', exportFileDefaultName);\n        linkElement.click();\n        this.closeExportModal();\n    }\n\n    exportToCSV() {\n        let csv = 'id,createdAt,lastModified,monthKey,content,date\\n';\n        Object.values(this.forms).forEach(form => {\n            csv += `\"${form.id}\",\"${form.createdAt}\",\"${form.lastModified}\",\"${form.monthKey}\",\"${form.content.replace(/\"/g, '\"\"')}\",\"${form.date}\"\\n`;\n        });\n\n        const dataUri = 'data:text/csv;charset=utf-8,'+ encodeURIComponent(csv);\n        const exportFileDefaultName = 'payroll-forms.csv';\n\n        const linkElement = document.createElement('a');\n        linkElement.setAttribute('href', dataUri);\n        linkElement.setAttribute('download', exportFileDefaultName);\n        linkElement.click();\n        this.closeExportModal();\n    }\n\n    exportToText() {\n        let text = '';\n        Object.values(this.forms).forEach(form => {\n            text += `ID: ${form.id}\\nCreated At: ${form.createdAt}\\nLast Modified: ${form.lastModified}\\nMonth: ${form.monthKey}\\nDate: ${form.date}\\nContent: ${form.content}\\n\\n`;\n        });\n\n        const dataUri = 'data:text/plain;charset=utf-8,'+ encodeURIComponent(text);\n        const exportFileDefaultName = 'payroll-forms.txt';\n\n        const linkElement = document.createElement('a');\n        linkElement.setAttribute('href', dataUri);\n        linkElement.setAttribute('download', exportFileDefaultName);\n        linkElement.click();\n        this.closeExportModal();\n    }\n\n    clearAllData() {\n        if (confirm('Are you sure you want to clear all data?')) {\n            this.forms = {};\n            this.saveToStorage();\n            this.renderForms();\n            this.updateStats();\n            this.showToast('All data cleared successfully!');\n        }\n    }\n}\n\n// Initialize the form management system\nconst formSystem = new FormManagementSystem();","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"./taskpane.js\", import.meta.url);\n// Module\nvar code = \"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\"> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>Payroll Form Management System</title> <link rel=\\\"stylesheet\\\" href=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\"> </head> <body> <div class=\\\"container\\\"> <header class=\\\"main-header\\\"> <h1 class=\\\"system-title\\\">PAYROLL SYSTEM - <span id=\\\"current-month\\\"></span></h1> <div class=\\\"current-date\\\">Today is: <span id=\\\"current-date\\\"></span></div> </header> <div class=\\\"control-panel\\\"> <button class=\\\"btn btn-primary\\\" onclick=\\\"formSystem.addNewForm()\\\"> <i class=\\\"icon\\\">📝</i> Add New Message </button> <button class=\\\"btn btn-secondary\\\" onclick=\\\"formSystem.goToToday()\\\"> <i class=\\\"icon\\\">📅</i> Go to Today </button> <button class=\\\"btn btn-tertiary\\\" onclick=\\\"formSystem.exportData()\\\"> <i class=\\\"icon\\\">💾</i> Export Data </button> <button class=\\\"btn btn-quaternary\\\" onclick=\\\"formSystem.clearAllData()\\\"> <i class=\\\"icon\\\">🗑️</i> Clear All </button> </div> <div class=\\\"month-navigation\\\"> <button class=\\\"nav-btn\\\" onclick=\\\"formSystem.changeMonth(-1)\\\"> <i class=\\\"icon\\\">◀</i> Previous Month </button> <span class=\\\"current-month-display\\\" id=\\\"nav-month\\\"></span> <button class=\\\"nav-btn\\\" onclick=\\\"formSystem.changeMonth(1)\\\"> Next Month <i class=\\\"icon\\\">▶</i> </button> </div> <div class=\\\"forms-container\\\" id=\\\"forms-container\\\"> </div> <div class=\\\"empty-state\\\" id=\\\"empty-state\\\"> <div class=\\\"empty-state-content\\\"> <div class=\\\"empty-icon\\\">📝</div> <h2>No forms yet for this month</h2> <p>Click \\\"Add New Message\\\" to create your first form entry</p> <button class=\\\"btn btn-primary btn-large\\\" onclick=\\\"formSystem.addNewForm()\\\"> Add Your First Message </button> </div> </div> <div class=\\\"stats-panel\\\" id=\\\"stats-panel\\\"> <div class=\\\"stat-item\\\"> <span class=\\\"stat-label\\\">Total Forms:</span> <span class=\\\"stat-value\\\" id=\\\"total-forms\\\">0</span> </div> <div class=\\\"stat-item\\\"> <span class=\\\"stat-label\\\">This Month:</span> <span class=\\\"stat-value\\\" id=\\\"month-forms\\\">0</span> </div> <div class=\\\"stat-item\\\"> <span class=\\\"stat-label\\\">Last Updated:</span> <span class=\\\"stat-value\\\" id=\\\"last-updated\\\">Never</span> </div> </div> </div> <div class=\\\"toast\\\" id=\\\"toast\\\"> <div class=\\\"toast-content\\\"> <span class=\\\"toast-message\\\" id=\\\"toast-message\\\"></span> <button class=\\\"toast-close\\\" onclick=\\\"formSystem.hideToast()\\\">&times;</button> </div> </div> <div class=\\\"modal\\\" id=\\\"export-modal\\\"> <div class=\\\"modal-content\\\"> <div class=\\\"modal-header\\\"> <h2>Export Data</h2> <button class=\\\"modal-close\\\" onclick=\\\"formSystem.closeExportModal()\\\">&times;</button> </div> <div class=\\\"modal-body\\\"> <p>Choose export format:</p> <div class=\\\"export-options\\\"> <button class=\\\"btn btn-primary\\\" onclick=\\\"formSystem.exportToJSON()\\\"> <i class=\\\"icon\\\">📄</i> Export as JSON </button> <button class=\\\"btn btn-secondary\\\" onclick=\\\"formSystem.exportToCSV()\\\"> <i class=\\\"icon\\\">📊</i> Export as CSV </button> <button class=\\\"btn btn-tertiary\\\" onclick=\\\"formSystem.exportToText()\\\"> <i class=\\\"icon\\\">📝</i> Export as Text </button> </div> </div> </div> </div> <div class=\\\"modal\\\" id=\\\"confirm-modal\\\"> <div class=\\\"modal-content\\\"> <div class=\\\"modal-header\\\"> <h2>Confirm Action</h2> </div> <div class=\\\"modal-body\\\"> <p id=\\\"confirm-message\\\"></p> <div class=\\\"modal-actions\\\"> <button class=\\\"btn btn-danger\\\" id=\\\"confirm-yes\\\">Yes, Delete</button> <button class=\\\"btn btn-secondary\\\" onclick=\\\"formSystem.closeConfirmModal()\\\">Cancel</button> </div> </div> </div> </div> <\" + \"script src=\\\"\" + ___HTML_LOADER_IMPORT_1___ + \"\\\"><\" + \"/script> </body> </html> \";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","g","globalThis","this","Function","e","window","o","obj","prop","Object","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","FormManagementSystem","_classCallCheck","currentMonth","Date","forms","loadFromStorage","init","key","value","_this","updateCurrentDate","updateCurrentMonth","renderForms","updateStats","setupEventListeners","setInterval","_this2","addEventListener","target","classList","contains","autoSave","shiftKey","preventDefault","textarea","start","selectionStart","end","selectionEnd","substring","now","getElementById","textContent","toLocaleDateString","weekday","year","month","day","monthYear","concat","getMonth","getFullYear","date","String","getDate","padStart","dateStr","formatDate","timeStr","toLocaleTimeString","hour","minute","hour12","stored","localStorage","getItem","JSON","parse","error","console","setItem","stringify","updateLastUpdated","showToast","_this3","clearTimeout","saveTimeout","setTimeout","saveAllForms","_this4","querySelectorAll","forEach","formId","dataset","content","lastModified","toISOString","saveToStorage","lastUpdated","toLocaleString","arguments","monthKey","getMonthKey","values","filter","form","sort","a","createdAt","getTime","newForm","id","newTextarea","querySelector","focus","originalForm","newFormId","duplicatedForm","_objectSpread","direction","setMonth","formsContainer","emptyState","currentMonthForms","getCurrentMonthForms","innerHTML","remove","add","formElement","createElement","className","appendChild","totalForms","keys","monthForms","message","type","toast","dataStr","dataUri","encodeURIComponent","linkElement","setAttribute","click","closeExportModal","csv","text","confirm","URL"],"sourceRoot":""}