{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://excel-custom-functions-js/webpack/bootstrap","webpack://excel-custom-functions-js/webpack/runtime/global","webpack://excel-custom-functions-js/webpack/runtime/hasOwnProperty shorthand","webpack://excel-custom-functions-js/webpack/runtime/publicPath","webpack://excel-custom-functions-js/webpack/runtime/jsonp chunk loading","webpack://excel-custom-functions-js/./src/taskpane/taskpane.js","webpack://excel-custom-functions-js/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","class FormManagementSystem {\n    constructor() {\n        this.targetWorkbookName = \"test.xlsx\";\n        this.targetSheetName = \"Sheet1\";\n        this.isAddInConfigured = true;\n        this.initializeExcelEvents();\n\n        this.currentMonth = new Date();\n        this.loadFromExcel().then(() => { // Chargement initial depuis Excel\n            this.init();\n        });\n\n        document.getElementById('testExcel')?.addEventListener('click', async () => {\n            try {\n                await Excel.run(async (ctx) => {\n                    const sheet = ctx.workbook.worksheets.getItem(\"Sheet1\");\n                    sheet.getRange(\"A1\").values = [[\"TEST_\" + new Date().toLocaleTimeString()]];\n                    await ctx.sync();\n                    alert(\"Écriture réussie ! Vérifiez la cellule A1\");\n                });\n            } catch (error) {\n                console.error(\"Erreur Excel :\", error);\n                alert(\"Échec : \" + error.message);\n            }\n        });\n\n        // Initialiser avec un tableau vide en attendant le chargement\n        this.forms = {};\n    }\n\n    init() {\n        this.updateCurrentDate();\n        this.updateCurrentMonth();\n        this.renderForms();\n        this.updateStats();\n        this.setupEventListeners();\n        setInterval(() => this.updateCurrentDate(), 60000);\n    }\n\n    async initializeExcelEvents() {\n        try {\n            // Check if we're in Excel\n            if (Office.context.host === Office.HostType.Excel) {\n                // Check if we should monitor sheet activation\n                const configured = await this.getSetting(\"test\");\n                if (configured) {\n                    this.isAddInConfigured = true;\n                    this.monitorSheetActivation();\n                }\n\n                // Set up worksheet activated handler\n                await Excel.run(async (context) => {\n                    const sheets = context.workbook.worksheets;\n                    sheets.onActivated.add(this.handleSheetActivation.bind(this));\n                    await context.sync();\n                });\n            }\n        } catch (error) {\n            console.error(\"Error initializing Excel events:\", error);\n        }\n    }\n\n    async monitorSheetActivation() {\n        try {\n            await Excel.run(async (context) => {\n                const sheet = context.workbook.worksheets.getActiveWorksheet();\n                sheet.load(\"test\");\n                await context.sync();\n\n                if (sheet.name === this.targetSheetName) {\n                    Office.addin.showAsTaskpane();\n                }\n            });\n        } catch (error) {\n            console.error(\"Error monitoring sheet activation:\", error);\n        }\n    }\n\n    async handleSheetActivation(event) {\n        try {\n            const worksheet = event.worksheet;\n            worksheet.load(\"name\");\n            await event.context.sync();\n\n            if (worksheet.name === this.targetSheetName && this.isAddInConfigured) {\n                Office.addin.showAsTaskpane();\n            }\n        } catch (error) {\n            console.error(\"Error handling sheet activation:\", error);\n        }\n    }\n\n    async configureForTargetSheet() {\n        try {\n            await this.setSetting(\"targetSheetConfigured\", true);\n            this.isAddInConfigured = true;\n            this.monitorSheetActivation();\n            this.showToast(\"Add-in will now open automatically for this sheet\");\n        } catch (error) {\n            console.error(\"Error configuring for target sheet:\", error);\n            this.showToast(\"Error configuring automatic opening\", \"error\");\n        }\n    }\n\n    // Helper methods for settings\n    async getSetting(key) {\n        return new Promise((resolve) => {\n            Office.context.document.settings.get(key, (result) => {\n                if (result.status === Office.AsyncResultStatus.Succeeded) {\n                    resolve(result.value);\n                } else {\n                    resolve(null);\n                }\n            });\n        });\n    }\n\n    async setSetting(key, value) {\n        return new Promise((resolve) => {\n            Office.context.document.settings.set(key, value);\n            Office.context.document.settings.saveAsync((result) => {\n                resolve(result.status === Office.AsyncResultStatus.Succeeded);\n            });\n        });\n    }\n\n    async loadFromExcel() {\n        this.forms = await loadFromExcel();\n    }\n\n    async saveToExcel() {\n        await saveToExcel(this.forms);\n    }\n\n    setupEventListeners() {\n        document.addEventListener('input', (e) => {\n            if (e.target.classList.contains('form-textarea') && this.isCurrentMonth()) {\n                this.autoSave();\n            }\n        });\n\n        document.addEventListener('keydown', (e) => {\n            if (e.target.classList.contains('form-textarea') && e.key === 'Enter' && !e.shiftKey && this.isCurrentMonth()) {\n                e.preventDefault();\n                const textarea = e.target;\n                const start = textarea.selectionStart;\n                const end = textarea.selectionEnd;\n                textarea.value = textarea.value.substring(0, start) + '\\n' + textarea.value.substring(end);\n                textarea.selectionStart = textarea.selectionEnd = start + 1;\n                this.autoSave();\n            }\n        });\n    }\n\n    // Date and Time Functions\n    updateCurrentDate() {\n        const now = new Date();\n        const options = {\n            weekday: 'long',\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric'\n        };\n        document.getElementById('current-date').textContent = now.toLocaleDateString('en-US', options);\n    }\n\n    isCurrentMonth() {\n        const currentDate = new Date();\n        return this.currentMonth.getMonth() === currentDate.getMonth() &&\n            this.currentMonth.getFullYear() === currentDate.getFullYear();\n    }\n\n    updateCurrentMonth() {\n        const monthNames = [\n            \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n        ];\n        const monthYear = `${monthNames[this.currentMonth.getMonth()]} ${this.currentMonth.getFullYear()}`;\n        document.getElementById('current-month').textContent = monthYear;\n        document.getElementById('nav-month').textContent = monthYear;\n    }\n\n    formatDate(date) {\n        const day = String(date.getDate()).padStart(2, '0');\n        const month = String(date.getMonth() + 1).padStart(2, '0');\n        const year = date.getFullYear();\n        return `${day}/${month}/${year}`;\n    }\n\n    formatDateTime(date) {\n        const dateStr = this.formatDate(date);\n        const timeStr = date.toLocaleTimeString('en-US', {\n            hour: '2-digit',\n            minute: '2-digit',\n            hour12: false\n        });\n        return `${dateStr} ${timeStr}`;\n    }\n\n    // Storage Functions\n    async loadFromStorage() {\n        try {\n            return await loadFromExcel();\n        } catch (error) {\n            console.error('Error loading from Excel:', error);\n            return {};\n        }\n    }\n\n    async saveToStorage() {\n        try {\n            await saveToExcel(this.forms);\n            this.updateLastUpdated();\n        } catch (error) {\n            console.error('Error saving to Excel:', error);\n            this.showToast('Error saving data', 'error');\n        }\n    }\n\n    autoSave() {\n        // Debounced auto-save\n        clearTimeout(this.saveTimeout);\n        this.saveTimeout = setTimeout(async () => {\n            await this.saveAllForms();\n        }, 1000);\n    }\n\n    async saveAllForms() {\n        const textareas = document.querySelectorAll('.form-textarea');\n        textareas.forEach(textarea => {\n            const formId = textarea.dataset.formId;\n            if (formId && this.forms[formId]) {\n                this.forms[formId].content = textarea.value;\n                this.forms[formId].lastModified = new Date().toISOString();\n            }\n        });\n        await this.saveToStorage(); // Attendre la sauvegarde dans Excel\n    }\n\n    updateLastUpdated() {\n        const lastUpdated = new Date().toLocaleString();\n        document.getElementById('last-updated').textContent = lastUpdated;\n    }\n\n    // Form Management Functions\n    getMonthKey(date = this.currentMonth) {\n        return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n    }\n\n    getCurrentMonthForms() {\n        const monthKey = this.getMonthKey();\n        return Object.values(this.forms).filter(form =>\n            form.monthKey === monthKey\n        ).sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n    }\n\n    async addNewForm() {\n        const now = new Date();\n        const formId = `form_${now.getTime()}`;\n        const monthKey = this.getMonthKey();\n\n        const newForm = {\n            id: formId,\n            createdAt: now.toISOString(),\n            lastModified: now.toISOString(),\n            monthKey: monthKey,\n            content: '',\n            date: this.formatDate(now)\n        };\n\n        this.forms[formId] = newForm;\n        await this.saveToStorage(); // Sauvegarde dans Excel\n        this.renderForms();\n        this.updateStats();\n\n        // ... reste du code ...\n    }\n\n    async deleteForm(formId) {\n        if (this.forms[formId]) {\n            delete this.forms[formId];\n            await this.saveToStorage(); // Sauvegarde dans Excel\n            this.renderForms();\n            this.updateStats();\n            this.showToast('Form deleted successfully!');\n        }\n    }\n\n    async deleteForm(formId) {\n        if (this.forms[formId]) {\n            delete this.forms[formId];\n            await this.saveToExcel();\n            this.renderForms();\n            this.updateStats();\n            this.showToast('Form deleted successfully!');\n        }\n    }\n\n    async duplicateForm(formId) {\n        if (this.forms[formId]) {\n            const originalForm = this.forms[formId];\n            const now = new Date();\n            const newFormId = `form_${now.getTime()}`;\n\n            const duplicatedForm = {\n                ...originalForm,\n                id: newFormId,\n                createdAt: now.toISOString(),\n                lastModified: now.toISOString(),\n                date: this.formatDate(now)\n            };\n\n            this.forms[newFormId] = duplicatedForm;\n            await this.saveToExcel();\n            this.renderForms();\n            this.updateStats();\n            this.showToast('Form duplicated successfully!');\n        }\n    }\n\n    // Navigation Functions\n    changeMonth(direction) {\n        this.currentMonth.setMonth(this.currentMonth.getMonth() + direction);\n        this.updateCurrentMonth();\n        this.renderForms();\n    }\n\n    goToToday() {\n        this.currentMonth = new Date();\n        this.updateCurrentMonth();\n        this.renderForms();\n    }\n\n    // Rendering Functions\n    renderForms() {\n        const formsContainer = document.getElementById('forms-container');\n        const emptyState = document.getElementById('empty-state');\n        const currentMonthForms = this.getCurrentMonthForms();\n        const isCurrentMonth = this.isCurrentMonth();\n\n        formsContainer.innerHTML = '';\n\n        if (currentMonthForms.length === 0) {\n            emptyState.classList.remove('hidden');\n        } else {\n            emptyState.classList.add('hidden');\n            currentMonthForms.forEach(form => {\n                const formElement = document.createElement('div');\n                formElement.className = 'form-entry';\n                formElement.innerHTML = `\n                    <div class=\"form-header\">\n                        <div class=\"form-date\">Added on: ${form.date}</div>\n                        <div class=\"form-actions\">\n                            <button ${!isCurrentMonth ? 'disabled' : `onclick=\"formSystem.duplicateForm('${form.id}')\"`}>Duplicate</button>\n                            <button ${!isCurrentMonth ? 'disabled' : `onclick=\"formSystem.deleteForm('${form.id}')\"`}>Delete</button>\n                        </div>\n                    </div>\n                    <div class=\"form-content\">\n                        <textarea class=\"form-textarea\" data-form-id=\"${form.id}\" ${!isCurrentMonth ? 'readonly' : ''} placeholder=\"Enter your comment here...\">${form.content}</textarea>\n                    </div>\n                `;\n                formsContainer.appendChild(formElement);\n            });\n        }\n\n        // Désactiver le bouton \"Add New Message\" si ce n'est pas le mois courant\n        document.querySelector('.btn-primary').disabled = !isCurrentMonth;\n    }\n\n    // Statistics Functions\n    updateStats() {\n        const totalForms = Object.keys(this.forms).length;\n        const monthForms = this.getCurrentMonthForms().length;\n\n        document.getElementById('total-forms').textContent = totalForms;\n        document.getElementById('month-forms').textContent = monthForms;\n    }\n\n    // Toast Notification\n    showToast(message, type = 'success') {\n        const toast = document.getElementById('toast');\n        const toastMessage = document.getElementById('toast-message');\n        toastMessage.textContent = message;\n        toast.className = `toast ${type}`;\n        toast.classList.add('show');\n\n        setTimeout(() => {\n            toast.classList.remove('show');\n        }, 3000);\n    }\n\n    // Export Functions\n    exportData() {\n        const exportModal = document.getElementById('export-modal');\n        exportModal.classList.add('show');\n    }\n\n    closeExportModal() {\n        const exportModal = document.getElementById('export-modal');\n        exportModal.classList.remove('show');\n    }\n\n    exportToJSON() {\n        const dataStr = JSON.stringify(this.forms, null, 2);\n        const dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr);\n\n        const exportFileDefaultName = 'payroll-forms.json';\n        const linkElement = document.createElement('a');\n        linkElement.setAttribute('href', dataUri);\n        linkElement.setAttribute('download', exportFileDefaultName);\n        linkElement.click();\n        this.closeExportModal();\n    }\n\n    exportToCSV() {\n        const currentMonthForms = this.getCurrentMonthForms();\n        let csv = 'id,createdAt,lastModified,monthKey,content,date\\n';\n        currentMonthForms.forEach(form => {\n            csv += `\"${form.id}\",\"${form.createdAt}\",\"${form.lastModified}\",\"${form.monthKey}\",\"${form.content.replace(/\"/g, '\"\"')}\",\"${form.date}\"\\n`;\n        });\n\n        const dataUri = 'data:text/csv;charset=utf-8,' + encodeURIComponent(csv);\n        const monthYear = this.getMonthKey(this.currentMonth);\n        const exportFileDefaultName = `payroll-forms-${monthYear}.csv`;\n\n        const linkElement = document.createElement('a');\n        linkElement.setAttribute('href', dataUri);\n        linkElement.setAttribute('download', exportFileDefaultName);\n        linkElement.click();\n        this.closeExportModal();\n    }\n\n    exportToText() {\n        let text = '';\n        Object.values(this.forms).forEach(form => {\n            text += `ID: ${form.id}\\nCreated At: ${form.createdAt}\\nLast Modified: ${form.lastModified}\\nMonth: ${form.monthKey}\\nDate: ${form.date}\\nContent: ${form.content}\\n\\n`;\n        });\n\n        const dataUri = 'data:text/plain;charset=utf-8,' + encodeURIComponent(text);\n        const exportFileDefaultName = 'payroll-forms.txt';\n\n        const linkElement = document.createElement('a');\n        linkElement.setAttribute('href', dataUri);\n        linkElement.setAttribute('download', exportFileDefaultName);\n        linkElement.click();\n        this.closeExportModal();\n    }\n\n    clearAllData() {\n        if (confirm('Are you sure you want to clear all data?')) {\n            this.forms = {};\n            this.saveToStorage();\n            this.renderForms();\n            this.updateStats();\n            this.showToast('All data cleared successfully!');\n        }\n    }\n}\n\nasync function loadFromExcel() {\n    try {\n        let forms = {};\n        await Excel.run(async (context) => {\n            const sheet = context.workbook.worksheets.getItem(this.targetSheetName);\n            const range = sheet.getUsedRange();\n            range.load(\"values, rowCount\");\n            await context.sync();\n\n            if (range.rowCount > 1) { // S'il y a des données\n                const data = range.values;\n                const headers = data[0];\n\n                for (let i = 1; i < data.length; i++) {\n                    const row = data[i];\n                    const form = {};\n                    for (let j = 0; j < headers.length; j++) {\n                        form[headers[j]] = row[j];\n                    }\n                    forms[form.id] = form;\n                }\n            }\n        });\n        return forms;\n    } catch (error) {\n        console.error(\"Error loading data from Excel:\", error);\n        return {};\n    }\n}\n\nasync function saveToExcel(forms) {\n    try {\n        await Excel.run(async (context) => {\n            const sheet = context.workbook.worksheets.getItem(this.targetSheetName);\n\n            // Effacer la feuille existante\n            sheet.getUsedRange().clear();\n\n            // Préparer les données\n            const headers = [\"id\", \"createdAt\", \"lastModified\", \"monthKey\", \"content\", \"date\"];\n            const data = [headers];\n\n            Object.values(forms).forEach(form => {\n                data.push([\n                    form.id,\n                    form.createdAt,\n                    form.lastModified,\n                    form.monthKey,\n                    form.content,\n                    form.date\n                ]);\n            });\n\n            // Écrire les données\n            const range = sheet.getRangeByIndexes(0, 0, data.length, headers.length);\n            range.values = data;\n\n            // Formater l'en-tête\n            range.getRow(0).format.fill.color = \"#4472C4\";\n            range.getRow(0).format.font.color = \"white\";\n            range.getRow(0).format.font.bold = true;\n\n            await context.sync();\n        });\n    } catch (error) {\n        console.error(\"Error saving data to Excel:\", error);\n        throw error;\n    }\n}\n\n\n// Initialize the form management system\nconst formSystem = new FormManagementSystem();\n\n// Add this to your HTML to configure the automatic opening\nfunction configureAutoOpen() {\n    formSystem.configureForTargetSheet();\n}","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"./taskpane.js\", import.meta.url);\n// Module\nvar code = \"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\"> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>Consultant Client Chat Bot</title> <link rel=\\\"stylesheet\\\" href=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\"> </head> <body> <div class=\\\"container\\\"> <header class=\\\"main-header\\\"> <h1 class=\\\"system-title\\\">Consultant Client Chat Bot - <span id=\\\"current-month\\\"></span></h1> <div class=\\\"current-date\\\">Today is: <span id=\\\"current-date\\\"></span></div> </header> <div class=\\\"control-panel\\\"> <button class=\\\"btn btn-primary btn-uniform\\\" onclick=\\\"formSystem.addNewForm()\\\"> <i class=\\\"icon\\\">📝</i> Add New Message </button> <button class=\\\"btn btn-primary btn-uniform\\\" id=\\\"testExcel\\\">TEST EXCEL</button> <button class=\\\"btn btn-secondary btn-uniform\\\" onclick=\\\"formSystem.goToToday()\\\"> <i class=\\\"icon\\\">📅</i> Go to Today </button> <button class=\\\"btn btn-tertiary btn-uniform\\\" onclick=\\\"formSystem.exportData()\\\"> <i class=\\\"icon\\\">💾</i> Export Data </button> <button class=\\\"btn btn-quaternary btn-uniform\\\" onclick=\\\"formSystem.clearAllData()\\\"> <i class=\\\"icon\\\">🗑️</i> Clear All </button> </div> <div class=\\\"month-navigation\\\"> <button class=\\\"nav-btn\\\" onclick=\\\"formSystem.changeMonth(-1)\\\"> <i class=\\\"icon\\\">◀</i> Previous Month </button> <span class=\\\"current-month-display\\\" id=\\\"nav-month\\\"></span> <button class=\\\"nav-btn\\\" onclick=\\\"formSystem.changeMonth(1)\\\"> Next Month <i class=\\\"icon\\\">▶</i> </button> </div> <div class=\\\"forms-container\\\" id=\\\"forms-container\\\"> </div> <div class=\\\"empty-state\\\" id=\\\"empty-state\\\"> <div class=\\\"empty-state-content\\\"> <div class=\\\"empty-icon\\\">📝</div> <h2>No updates for this month</h2> <p>Click \\\"Add New Update\\\" to create your first update</p> <button class=\\\"btn btn-primary btn-large\\\" onclick=\\\"formSystem.addNewForm()\\\"> Add Your First Update </button> </div> </div> <div class=\\\"stats-panel\\\" id=\\\"stats-panel\\\"> <div class=\\\"stat-item\\\"> <span class=\\\"stat-label\\\">Total Forms:</span> <span class=\\\"stat-value\\\" id=\\\"total-forms\\\">0</span> </div> <div class=\\\"stat-item\\\"> <span class=\\\"stat-label\\\">This Month:</span> <span class=\\\"stat-value\\\" id=\\\"month-forms\\\">0</span> </div> <div class=\\\"stat-item\\\"> <span class=\\\"stat-label\\\">Last Updated:</span> <span class=\\\"stat-value\\\" id=\\\"last-updated\\\">Never</span> </div> </div> </div> <div class=\\\"toast\\\" id=\\\"toast\\\"> <div class=\\\"toast-content\\\"> <span class=\\\"toast-message\\\" id=\\\"toast-message\\\"></span> <button class=\\\"toast-close\\\" onclick=\\\"formSystem.hideToast()\\\">&times;</button> </div> </div> <div class=\\\"modal\\\" id=\\\"export-modal\\\"> <div class=\\\"modal-content\\\"> <div class=\\\"modal-header\\\"> <h2>Export Data</h2> <button class=\\\"modal-close\\\" onclick=\\\"formSystem.closeExportModal()\\\">&times;</button> </div> <div class=\\\"modal-body\\\"> <p>Choose export format:</p> <div class=\\\"export-options\\\"> <button class=\\\"btn btn-secondary\\\" onclick=\\\"formSystem.exportToCSV()\\\"> <i class=\\\"icon\\\">📊</i> Export as CSV </button> </div> </div> </div> </div> <div class=\\\"modal\\\" id=\\\"confirm-modal\\\"> <div class=\\\"modal-content\\\"> <div class=\\\"modal-header\\\"> <h2>Confirm Action</h2> </div> <div class=\\\"modal-body\\\"> <p id=\\\"confirm-message\\\"></p> <div class=\\\"modal-actions\\\"> <button class=\\\"btn btn-danger\\\" id=\\\"confirm-yes\\\">Yes, Delete</button> <button class=\\\"btn btn-secondary\\\" onclick=\\\"formSystem.closeConfirmModal()\\\">Cancel</button> </div> </div> </div> </div> <\" + \"script src=\\\"\" + ___HTML_LOADER_IMPORT_1___ + \"\\\"><\" + \"/script> </body> </html> \";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","g","globalThis","this","Function","e","window","o","obj","prop","Object","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","t","r","Symbol","n","iterator","toStringTag","c","Generator","u","create","_regeneratorDefine2","f","y","G","v","a","d","bind","l","TypeError","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","defineProperty","enumerable","configurable","writable","_invoke","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_defineProperties","_toPropertyKey","key","_typeof","toPrimitive","String","_toPrimitive","FormManagementSystem","_document$getElementB","_this","_classCallCheck","targetWorkbookName","targetSheetName","isAddInConfigured","initializeExcelEvents","currentMonth","Date","loadFromExcel","init","getElementById","addEventListener","_callee2","_t","_context2","Excel","run","_ref2","_callee","ctx","_context","workbook","worksheets","getItem","getRange","values","toLocaleTimeString","sync","alert","_x","console","error","message","forms","_this2","updateCurrentDate","updateCurrentMonth","renderForms","updateStats","setupEventListeners","setInterval","_initializeExcelEvents","_callee4","_t2","_this3","_context4","Office","context","host","HostType","getSetting","monitorSheetActivation","_ref3","_callee3","_context3","onActivated","add","handleSheetActivation","_x2","_monitorSheetActivation","_callee6","_t3","_this4","_context6","_ref4","_callee5","sheet","_context5","getActiveWorksheet","load","name","addin","showAsTaskpane","_x3","_handleSheetActivation","_callee7","event","worksheet","_t4","_context7","_x4","_configureForTargetSheet","_callee8","_t5","_context8","setSetting","showToast","_getSetting","_callee9","_context9","settings","get","result","status","AsyncResultStatus","Succeeded","_x5","_setSetting","_callee0","_context0","set","saveAsync","_x6","_x7","_loadFromExcel2","_callee1","_context1","_saveToExcel2","_callee10","_context10","saveToExcel","_this5","target","classList","contains","isCurrentMonth","autoSave","shiftKey","preventDefault","textarea","start","selectionStart","end","selectionEnd","substring","now","textContent","toLocaleDateString","weekday","year","month","day","currentDate","getMonth","getFullYear","monthYear","concat","date","getDate","padStart","dateStr","formatDate","timeStr","hour","minute","hour12","_loadFromStorage","_callee11","_t6","_context11","_saveToStorage","_callee12","_t7","_context12","updateLastUpdated","_this6","clearTimeout","saveTimeout","setTimeout","_callee13","_context13","saveAllForms","_saveAllForms","_callee14","_this7","_context14","querySelectorAll","forEach","formId","dataset","content","lastModified","toISOString","saveToStorage","lastUpdated","toLocaleString","monthKey","getMonthKey","filter","form","sort","createdAt","_addNewForm","_callee15","newForm","_context15","getTime","id","_deleteForm","_callee16","_context16","_x8","_duplicateForm","_callee17","originalForm","newFormId","duplicatedForm","_context17","_objectSpread","_x9","direction","setMonth","formsContainer","emptyState","currentMonthForms","getCurrentMonthForms","innerHTML","remove","formElement","createElement","className","appendChild","querySelector","disabled","totalForms","keys","monthForms","type","toast","dataStr","JSON","stringify","dataUri","encodeURIComponent","linkElement","setAttribute","click","closeExportModal","csv","exportFileDefaultName","text","confirm","_loadFromExcel3","_callee19","_t8","_this8","_context19","_ref6","_callee18","range","data","headers","row","j","_context18","getUsedRange","rowCount","_x1","_x0","_saveToExcel3","_callee21","_t9","_this9","_context21","_ref7","_callee20","_context20","clear","push","getRangeByIndexes","getRow","format","fill","color","font","bold","_x10","URL"],"sourceRoot":""}