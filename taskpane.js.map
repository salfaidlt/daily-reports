{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://excel-custom-functions-js/webpack/bootstrap","webpack://excel-custom-functions-js/webpack/runtime/global","webpack://excel-custom-functions-js/webpack/runtime/hasOwnProperty shorthand","webpack://excel-custom-functions-js/webpack/runtime/publicPath","webpack://excel-custom-functions-js/webpack/runtime/jsonp chunk loading","webpack://excel-custom-functions-js/./src/taskpane/taskpane.js","webpack://excel-custom-functions-js/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","class FormManagementSystem {\n    constructor() {\n        this.targetWorkbookName = \"test.xlsx\"; // Set your target workbook name here\n        this.targetSheetName = \"Sheet1\"; // Optionally set a target sheet name\n        this.isAddInConfigured = true;\n        this.initializeExcelEvents();\n        \n        this.currentMonth = new Date();\n        this.forms = this.loadFromStorage();\n        this.init();\n    }\n\n    init() {\n        this.updateCurrentDate();\n        this.updateCurrentMonth();\n        this.renderForms();\n        this.updateStats();\n        this.setupEventListeners();\n        setInterval(() => this.updateCurrentDate(), 60000);\n    }\n\n    async initializeExcelEvents() {\n        try {\n            // Check if we're in Excel\n            if (Office.context.host === Office.HostType.Excel) {\n                // Check if we should monitor sheet activation\n                const configured = await this.getSetting(\"test\");\n                if (configured) {\n                    this.isAddInConfigured = true;\n                    this.monitorSheetActivation();\n                }\n                \n                // Set up worksheet activated handler\n                await Excel.run(async (context) => {\n                    const sheets = context.workbook.worksheets;\n                    sheets.onActivated.add(this.handleSheetActivation.bind(this));\n                    await context.sync();\n                });\n            }\n        } catch (error) {\n            console.error(\"Error initializing Excel events:\", error);\n        }\n    }\n\n    async monitorSheetActivation() {\n        try {\n            await Excel.run(async (context) => {\n                const sheet = context.workbook.worksheets.getActiveWorksheet();\n                sheet.load(\"test\");\n                await context.sync();\n                \n                if (sheet.name === this.targetSheetName) {\n                    Office.addin.showAsTaskpane();\n                }\n            });\n        } catch (error) {\n            console.error(\"Error monitoring sheet activation:\", error);\n        }\n    }\n\n    async handleSheetActivation(event) {\n        try {\n            const worksheet = event.worksheet;\n            worksheet.load(\"name\");\n            await event.context.sync();\n            \n            if (worksheet.name === this.targetSheetName && this.isAddInConfigured) {\n                Office.addin.showAsTaskpane();\n            }\n        } catch (error) {\n            console.error(\"Error handling sheet activation:\", error);\n        }\n    }\n\n    async configureForTargetSheet() {\n        try {\n            await this.setSetting(\"targetSheetConfigured\", true);\n            this.isAddInConfigured = true;\n            this.monitorSheetActivation();\n            this.showToast(\"Add-in will now open automatically for this sheet\");\n        } catch (error) {\n            console.error(\"Error configuring for target sheet:\", error);\n            this.showToast(\"Error configuring automatic opening\", \"error\");\n        }\n    }\n\n    // Helper methods for settings\n    async getSetting(key) {\n        return new Promise((resolve) => {\n            Office.context.document.settings.get(key, (result) => {\n                if (result.status === Office.AsyncResultStatus.Succeeded) {\n                    resolve(result.value);\n                } else {\n                    resolve(null);\n                }\n            });\n        });\n    }\n\n    async setSetting(key, value) {\n        return new Promise((resolve) => {\n            Office.context.document.settings.set(key, value);\n            Office.context.document.settings.saveAsync((result) => {\n                resolve(result.status === Office.AsyncResultStatus.Succeeded);\n            });\n        });\n    }\n\n    async loadFromExcel() {\n        this.forms = await loadFromExcel();\n    }\n\n    async saveToExcel() {\n        await saveToExcel(this.forms);\n    }\n\n    setupEventListeners() {\n        document.addEventListener('input', (e) => {\n            if (e.target.classList.contains('form-textarea') && this.isCurrentMonth()) {\n                this.autoSave();\n            }\n        });\n\n        document.addEventListener('keydown', (e) => {\n            if (e.target.classList.contains('form-textarea') && e.key === 'Enter' && !e.shiftKey && this.isCurrentMonth()) {\n                e.preventDefault();\n                const textarea = e.target;\n                const start = textarea.selectionStart;\n                const end = textarea.selectionEnd;\n                textarea.value = textarea.value.substring(0, start) + '\\n' + textarea.value.substring(end);\n                textarea.selectionStart = textarea.selectionEnd = start + 1;\n                this.autoSave();\n            }\n        });\n    }\n\n    // Date and Time Functions\n    updateCurrentDate() {\n        const now = new Date();\n        const options = {\n            weekday: 'long',\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric'\n        };\n        document.getElementById('current-date').textContent = now.toLocaleDateString('en-US', options);\n    }\n\n    isCurrentMonth() {\n        const currentDate = new Date();\n        return this.currentMonth.getMonth() === currentDate.getMonth() &&\n            this.currentMonth.getFullYear() === currentDate.getFullYear();\n    }\n\n    updateCurrentMonth() {\n        const monthNames = [\n            \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n        ];\n        const monthYear = `${monthNames[this.currentMonth.getMonth()]} ${this.currentMonth.getFullYear()}`;\n        document.getElementById('current-month').textContent = monthYear;\n        document.getElementById('nav-month').textContent = monthYear;\n    }\n\n    formatDate(date) {\n        const day = String(date.getDate()).padStart(2, '0');\n        const month = String(date.getMonth() + 1).padStart(2, '0');\n        const year = date.getFullYear();\n        return `${day}/${month}/${year}`;\n    }\n\n    formatDateTime(date) {\n        const dateStr = this.formatDate(date);\n        const timeStr = date.toLocaleTimeString('en-US', {\n            hour: '2-digit',\n            minute: '2-digit',\n            hour12: false\n        });\n        return `${dateStr} ${timeStr}`;\n    }\n\n    // Storage Functions\n    loadFromStorage() {\n        try {\n            const stored = localStorage.getItem('payroll-forms');\n            return stored ? JSON.parse(stored) : {};\n        } catch (error) {\n            console.error('Error loading from storage:', error);\n            return {};\n        }\n    }\n\n    saveToStorage() {\n        try {\n            localStorage.setItem('payroll-forms', JSON.stringify(this.forms));\n            this.updateLastUpdated();\n        } catch (error) {\n            console.error('Error saving to storage:', error);\n            this.showToast('Error saving data', 'error');\n        }\n    }\n\n    autoSave() {\n        // Debounced auto-save\n        clearTimeout(this.saveTimeout);\n        this.saveTimeout = setTimeout(() => {\n            this.saveAllForms();\n        }, 1000);\n    }\n\n    saveAllForms() {\n        const textareas = document.querySelectorAll('.form-textarea');\n        textareas.forEach(textarea => {\n            const formId = textarea.dataset.formId;\n            if (formId && this.forms[formId]) {\n                this.forms[formId].content = textarea.value;\n                this.forms[formId].lastModified = new Date().toISOString();\n            }\n        });\n        this.saveToStorage();\n    }\n\n    updateLastUpdated() {\n        const lastUpdated = new Date().toLocaleString();\n        document.getElementById('last-updated').textContent = lastUpdated;\n    }\n\n    // Form Management Functions\n    getMonthKey(date = this.currentMonth) {\n        return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n    }\n\n    getCurrentMonthForms() {\n        const monthKey = this.getMonthKey();\n        return Object.values(this.forms).filter(form =>\n            form.monthKey === monthKey\n        ).sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n    }\n\n    async addNewForm() {\n        const now = new Date();\n        const formId = `form_${now.getTime()}`;\n        const monthKey = this.getMonthKey();\n\n        const newForm = {\n            id: formId,\n            createdAt: now.toISOString(),\n            lastModified: now.toISOString(),\n            monthKey: monthKey,\n            content: '',\n            date: this.formatDate(now)\n        };\n\n        this.forms[formId] = newForm;\n        // await this.saveToExcel();\n        this.renderForms();\n        this.updateStats();\n\n        setTimeout(() => {\n            const newTextarea = document.querySelector(`[data-form-id=\"${formId}\"]`);\n            if (newTextarea) {\n                newTextarea.focus();\n            }\n        }, 100);\n\n        this.showToast('New form added successfully!');\n    }\n\n    async deleteForm(formId) {\n        if (this.forms[formId]) {\n            delete this.forms[formId];\n            await this.saveToExcel();\n            this.renderForms();\n            this.updateStats();\n            this.showToast('Form deleted successfully!');\n        }\n    }\n\n    async duplicateForm(formId) {\n        if (this.forms[formId]) {\n            const originalForm = this.forms[formId];\n            const now = new Date();\n            const newFormId = `form_${now.getTime()}`;\n\n            const duplicatedForm = {\n                ...originalForm,\n                id: newFormId,\n                createdAt: now.toISOString(),\n                lastModified: now.toISOString(),\n                date: this.formatDate(now)\n            };\n\n            this.forms[newFormId] = duplicatedForm;\n            await this.saveToExcel();\n            this.renderForms();\n            this.updateStats();\n            this.showToast('Form duplicated successfully!');\n        }\n    }\n\n    // Navigation Functions\n    changeMonth(direction) {\n        this.currentMonth.setMonth(this.currentMonth.getMonth() + direction);\n        this.updateCurrentMonth();\n        this.renderForms();\n    }\n\n    goToToday() {\n        this.currentMonth = new Date();\n        this.updateCurrentMonth();\n        this.renderForms();\n    }\n\n    // Rendering Functions\n    renderForms() {\n        const formsContainer = document.getElementById('forms-container');\n        const emptyState = document.getElementById('empty-state');\n        const currentMonthForms = this.getCurrentMonthForms();\n        const isCurrentMonth = this.isCurrentMonth();\n\n        formsContainer.innerHTML = '';\n\n        if (currentMonthForms.length === 0) {\n            emptyState.classList.remove('hidden');\n        } else {\n            emptyState.classList.add('hidden');\n            currentMonthForms.forEach(form => {\n                const formElement = document.createElement('div');\n                formElement.className = 'form-entry';\n                formElement.innerHTML = `\n                    <div class=\"form-header\">\n                        <div class=\"form-date\">Added on: ${form.date}</div>\n                        <div class=\"form-actions\">\n                            <button ${!isCurrentMonth ? 'disabled' : `onclick=\"formSystem.duplicateForm('${form.id}')\"`}>Duplicate</button>\n                            <button ${!isCurrentMonth ? 'disabled' : `onclick=\"formSystem.deleteForm('${form.id}')\"`}>Delete</button>\n                        </div>\n                    </div>\n                    <div class=\"form-content\">\n                        <textarea class=\"form-textarea\" data-form-id=\"${form.id}\" ${!isCurrentMonth ? 'readonly' : ''} placeholder=\"Enter your comment here...\">${form.content}</textarea>\n                    </div>\n                `;\n                formsContainer.appendChild(formElement);\n            });\n        }\n\n        // Désactiver le bouton \"Add New Message\" si ce n'est pas le mois courant\n        document.querySelector('.btn-primary').disabled = !isCurrentMonth;\n    }\n\n    // Statistics Functions\n    updateStats() {\n        const totalForms = Object.keys(this.forms).length;\n        const monthForms = this.getCurrentMonthForms().length;\n\n        document.getElementById('total-forms').textContent = totalForms;\n        document.getElementById('month-forms').textContent = monthForms;\n    }\n\n    // Toast Notification\n    showToast(message, type = 'success') {\n        const toast = document.getElementById('toast');\n        const toastMessage = document.getElementById('toast-message');\n        toastMessage.textContent = message;\n        toast.className = `toast ${type}`;\n        toast.classList.add('show');\n\n        setTimeout(() => {\n            toast.classList.remove('show');\n        }, 3000);\n    }\n\n    // Export Functions\n    exportData() {\n        const exportModal = document.getElementById('export-modal');\n        exportModal.classList.add('show');\n    }\n\n    closeExportModal() {\n        const exportModal = document.getElementById('export-modal');\n        exportModal.classList.remove('show');\n    }\n\n    exportToJSON() {\n        const dataStr = JSON.stringify(this.forms, null, 2);\n        const dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr);\n\n        const exportFileDefaultName = 'payroll-forms.json';\n        const linkElement = document.createElement('a');\n        linkElement.setAttribute('href', dataUri);\n        linkElement.setAttribute('download', exportFileDefaultName);\n        linkElement.click();\n        this.closeExportModal();\n    }\n\n    exportToCSV() {\n        const currentMonthForms = this.getCurrentMonthForms();\n        let csv = 'id,createdAt,lastModified,monthKey,content,date\\n';\n        currentMonthForms.forEach(form => {\n            csv += `\"${form.id}\",\"${form.createdAt}\",\"${form.lastModified}\",\"${form.monthKey}\",\"${form.content.replace(/\"/g, '\"\"')}\",\"${form.date}\"\\n`;\n        });\n\n        const dataUri = 'data:text/csv;charset=utf-8,' + encodeURIComponent(csv);\n        const monthYear = this.getMonthKey(this.currentMonth);\n        const exportFileDefaultName = `payroll-forms-${monthYear}.csv`;\n\n        const linkElement = document.createElement('a');\n        linkElement.setAttribute('href', dataUri);\n        linkElement.setAttribute('download', exportFileDefaultName);\n        linkElement.click();\n        this.closeExportModal();\n    }\n\n    exportToText() {\n        let text = '';\n        Object.values(this.forms).forEach(form => {\n            text += `ID: ${form.id}\\nCreated At: ${form.createdAt}\\nLast Modified: ${form.lastModified}\\nMonth: ${form.monthKey}\\nDate: ${form.date}\\nContent: ${form.content}\\n\\n`;\n        });\n\n        const dataUri = 'data:text/plain;charset=utf-8,' + encodeURIComponent(text);\n        const exportFileDefaultName = 'payroll-forms.txt';\n\n        const linkElement = document.createElement('a');\n        linkElement.setAttribute('href', dataUri);\n        linkElement.setAttribute('download', exportFileDefaultName);\n        linkElement.click();\n        this.closeExportModal();\n    }\n\n    clearAllData() {\n        if (confirm('Are you sure you want to clear all data?')) {\n            this.forms = {};\n            this.saveToStorage();\n            this.renderForms();\n            this.updateStats();\n            this.showToast('All data cleared successfully!');\n        }\n    }\n}\n\nasync function loadFromExcel() {\n    try {\n        await Excel.run(async (context) => {\n            const sheet = context.workbook.worksheets.getActiveWorksheet();\n            const range = sheet.getUsedRange();\n            range.load(\"values\");\n            await context.sync();\n\n            // Convertir les données de la feuille en un format utilisable\n            const data = range.values;\n            const headers = data[0];\n            const forms = {};\n\n            for (let i = 1; i < data.length; i++) {\n                const row = data[i];\n                const form = {};\n                for (let j = 0; j < headers.length; j++) {\n                    form[headers[j]] = row[j];\n                }\n                forms[form.id] = form;\n            }\n\n            return forms;\n        });\n    } catch (error) {\n        console.error(\"Error loading data from Excel:\", error);\n        OfficeHelpers.Utilities.log(error);\n    }\n}\n\nasync function saveToExcel(forms) {\n    try {\n        await Excel.run(async (context) => {\n            const sheet = context.workbook.worksheets.getActiveWorksheet();\n            sheet.getUsedRange().clear();\n\n            // Préparer les données pour la feuille Excel\n            const data = [[\"id\", \"content\", \"date\"]]; // En-têtes\n            Object.values(forms).forEach(form => {\n                data.push([form.id, form.content, form.date]);\n            });\n\n            // Écrire les données dans la feuille\n            const range = sheet.getRangeByIndexes(0, 0, data.length, data[0].length);\n            range.values = data;\n            await context.sync();\n        });\n    } catch (error) {\n        console.error(\"Error saving data to Excel:\", error);\n        OfficeHelpers.Utilities.log(error);\n    }\n}\n\n\n// Initialize the form management system\nconst formSystem = new FormManagementSystem();\n\n// Add this to your HTML to configure the automatic opening\nfunction configureAutoOpen() {\n    formSystem.configureForTargetSheet();\n}","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"./taskpane.js\", import.meta.url);\n// Module\nvar code = \"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\"> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>Consultant Client Chat Bot</title> <link rel=\\\"stylesheet\\\" href=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\"> </head> <body> <div class=\\\"container\\\"> <header class=\\\"main-header\\\"> <h1 class=\\\"system-title\\\">Consultant Client Chat Bot - <span id=\\\"current-month\\\"></span></h1> <div class=\\\"current-date\\\">Today is: <span id=\\\"current-date\\\"></span></div> </header> <div class=\\\"control-panel\\\"> <button class=\\\"btn btn-primary btn-uniform\\\" onclick=\\\"formSystem.addNewForm()\\\"> <i class=\\\"icon\\\">📝</i> Add New Message </button> <button class=\\\"btn btn-secondary btn-uniform\\\" onclick=\\\"formSystem.goToToday()\\\"> <i class=\\\"icon\\\">📅</i> Go to Today </button> <button class=\\\"btn btn-tertiary btn-uniform\\\" onclick=\\\"formSystem.exportData()\\\"> <i class=\\\"icon\\\">💾</i> Export Data </button> <button class=\\\"btn btn-quaternary btn-uniform\\\" onclick=\\\"formSystem.clearAllData()\\\"> <i class=\\\"icon\\\">🗑️</i> Clear All </button> </div> <div class=\\\"month-navigation\\\"> <button class=\\\"nav-btn\\\" onclick=\\\"formSystem.changeMonth(-1)\\\"> <i class=\\\"icon\\\">◀</i> Previous Month </button> <span class=\\\"current-month-display\\\" id=\\\"nav-month\\\"></span> <button class=\\\"nav-btn\\\" onclick=\\\"formSystem.changeMonth(1)\\\"> Next Month <i class=\\\"icon\\\">▶</i> </button> </div> <div class=\\\"forms-container\\\" id=\\\"forms-container\\\"> </div> <div class=\\\"empty-state\\\" id=\\\"empty-state\\\"> <div class=\\\"empty-state-content\\\"> <div class=\\\"empty-icon\\\">📝</div> <h2>No updates for this month</h2> <p>Click \\\"Add New Update\\\" to create your first update</p> <button class=\\\"btn btn-primary btn-large\\\" onclick=\\\"formSystem.addNewForm()\\\"> Add Your First Update </button> </div> </div> <div class=\\\"stats-panel\\\" id=\\\"stats-panel\\\"> <div class=\\\"stat-item\\\"> <span class=\\\"stat-label\\\">Total Forms:</span> <span class=\\\"stat-value\\\" id=\\\"total-forms\\\">0</span> </div> <div class=\\\"stat-item\\\"> <span class=\\\"stat-label\\\">This Month:</span> <span class=\\\"stat-value\\\" id=\\\"month-forms\\\">0</span> </div> <div class=\\\"stat-item\\\"> <span class=\\\"stat-label\\\">Last Updated:</span> <span class=\\\"stat-value\\\" id=\\\"last-updated\\\">Never</span> </div> </div> </div> <div class=\\\"toast\\\" id=\\\"toast\\\"> <div class=\\\"toast-content\\\"> <span class=\\\"toast-message\\\" id=\\\"toast-message\\\"></span> <button class=\\\"toast-close\\\" onclick=\\\"formSystem.hideToast()\\\">&times;</button> </div> </div> <div class=\\\"modal\\\" id=\\\"export-modal\\\"> <div class=\\\"modal-content\\\"> <div class=\\\"modal-header\\\"> <h2>Export Data</h2> <button class=\\\"modal-close\\\" onclick=\\\"formSystem.closeExportModal()\\\">&times;</button> </div> <div class=\\\"modal-body\\\"> <p>Choose export format:</p> <div class=\\\"export-options\\\"> <button class=\\\"btn btn-secondary\\\" onclick=\\\"formSystem.exportToCSV()\\\"> <i class=\\\"icon\\\">📊</i> Export as CSV </button> </div> </div> </div> </div> <div class=\\\"modal\\\" id=\\\"confirm-modal\\\"> <div class=\\\"modal-content\\\"> <div class=\\\"modal-header\\\"> <h2>Confirm Action</h2> </div> <div class=\\\"modal-body\\\"> <p id=\\\"confirm-message\\\"></p> <div class=\\\"modal-actions\\\"> <button class=\\\"btn btn-danger\\\" id=\\\"confirm-yes\\\">Yes, Delete</button> <button class=\\\"btn btn-secondary\\\" onclick=\\\"formSystem.closeConfirmModal()\\\">Cancel</button> </div> </div> </div> </div> <\" + \"script src=\\\"\" + ___HTML_LOADER_IMPORT_1___ + \"\\\"><\" + \"/script> </body> </html> \";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","g","globalThis","this","Function","e","window","o","obj","prop","Object","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","t","r","Symbol","n","iterator","toStringTag","c","Generator","u","create","_regeneratorDefine2","f","y","G","v","a","d","bind","l","TypeError","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","defineProperty","enumerable","configurable","writable","_invoke","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_defineProperties","_toPropertyKey","key","_typeof","toPrimitive","String","_toPrimitive","FormManagementSystem","_classCallCheck","targetWorkbookName","targetSheetName","isAddInConfigured","initializeExcelEvents","currentMonth","Date","forms","loadFromStorage","init","_this","updateCurrentDate","updateCurrentMonth","renderForms","updateStats","setupEventListeners","setInterval","_initializeExcelEvents","_callee2","_t","_this2","_context2","Office","context","host","HostType","Excel","getSetting","monitorSheetActivation","run","_ref","_callee","_context","workbook","worksheets","onActivated","add","handleSheetActivation","sync","_x","console","error","_monitorSheetActivation","_callee4","_t2","_this3","_context4","_ref2","_callee3","sheet","_context3","getActiveWorksheet","load","name","addin","showAsTaskpane","_x2","_handleSheetActivation","_callee5","event","worksheet","_t3","_context5","_x3","_configureForTargetSheet","_callee6","_t4","_context6","setSetting","showToast","_getSetting","_callee7","_context7","settings","get","result","status","AsyncResultStatus","Succeeded","_x4","_setSetting","_callee8","_context8","set","saveAsync","_x5","_x6","_loadFromExcel2","_callee9","_context9","loadFromExcel","_saveToExcel2","_callee0","_context0","saveToExcel","_this4","addEventListener","target","classList","contains","isCurrentMonth","autoSave","shiftKey","preventDefault","textarea","start","selectionStart","end","selectionEnd","substring","now","getElementById","textContent","toLocaleDateString","weekday","year","month","day","currentDate","getMonth","getFullYear","monthYear","concat","date","getDate","padStart","dateStr","formatDate","timeStr","toLocaleTimeString","hour","minute","hour12","stored","localStorage","getItem","JSON","parse","setItem","stringify","updateLastUpdated","_this5","clearTimeout","saveTimeout","setTimeout","saveAllForms","_this6","querySelectorAll","forEach","formId","dataset","content","lastModified","toISOString","saveToStorage","lastUpdated","toLocaleString","monthKey","getMonthKey","values","filter","form","sort","createdAt","_addNewForm","_callee1","newForm","_context1","getTime","id","newTextarea","querySelector","focus","_deleteForm","_callee10","_context10","_x7","_duplicateForm","_callee11","originalForm","newFormId","duplicatedForm","_context11","_objectSpread","_x8","direction","setMonth","formsContainer","emptyState","currentMonthForms","getCurrentMonthForms","innerHTML","remove","formElement","createElement","className","appendChild","disabled","totalForms","keys","monthForms","message","type","toast","dataStr","dataUri","encodeURIComponent","linkElement","setAttribute","click","closeExportModal","csv","exportFileDefaultName","text","confirm","_loadFromExcel3","_callee13","_t5","_context13","_ref3","_callee12","range","data","headers","row","j","_context12","getUsedRange","_x0","OfficeHelpers","Utilities","log","_x9","_saveToExcel3","_callee15","_t6","_context15","_ref4","_callee14","_context14","clear","push","getRangeByIndexes","_x1","URL"],"sourceRoot":""}