{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://excel-custom-functions-js/webpack/bootstrap","webpack://excel-custom-functions-js/webpack/runtime/global","webpack://excel-custom-functions-js/webpack/runtime/hasOwnProperty shorthand","webpack://excel-custom-functions-js/webpack/runtime/publicPath","webpack://excel-custom-functions-js/webpack/runtime/jsonp chunk loading","webpack://excel-custom-functions-js/./src/taskpane/taskpane.js","webpack://excel-custom-functions-js/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","class FormManagementSystem {\n    constructor() {\n        this.currentMonth = new Date();\n        this.forms = this.loadFromStorage();\n        this.init();\n    }\n\n    init() {\n        this.updateCurrentDate();\n        this.updateCurrentMonth();\n        this.renderForms();\n        this.updateStats();\n        this.setupEventListeners();\n        setInterval(() => this.updateCurrentDate(), 60000);\n    }\n\n    async loadFromExcel() {\n        this.forms = await loadFromExcel();\n    }\n\n    async saveToExcel() {\n        await saveToExcel(this.forms);\n    }\n\n    setupEventListeners() {\n        document.addEventListener('input', (e) => {\n            if (e.target.classList.contains('form-textarea') && this.isCurrentMonth()) {\n                this.autoSave();\n            }\n        });\n\n        document.addEventListener('keydown', (e) => {\n            if (e.target.classList.contains('form-textarea') && e.key === 'Enter' && !e.shiftKey && this.isCurrentMonth()) {\n                e.preventDefault();\n                const textarea = e.target;\n                const start = textarea.selectionStart;\n                const end = textarea.selectionEnd;\n                textarea.value = textarea.value.substring(0, start) + '\\n' + textarea.value.substring(end);\n                textarea.selectionStart = textarea.selectionEnd = start + 1;\n                this.autoSave();\n            }\n        });\n    }\n\n    // Date and Time Functions\n    updateCurrentDate() {\n        const now = new Date();\n        const options = {\n            weekday: 'long',\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric'\n        };\n        document.getElementById('current-date').textContent = now.toLocaleDateString('en-US', options);\n    }\n\n    isCurrentMonth() {\n        const currentDate = new Date();\n        return this.currentMonth.getMonth() === currentDate.getMonth() &&\n            this.currentMonth.getFullYear() === currentDate.getFullYear();\n    }\n\n    updateCurrentMonth() {\n        const monthNames = [\n            \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n        ];\n        const monthYear = `${monthNames[this.currentMonth.getMonth()]} ${this.currentMonth.getFullYear()}`;\n        document.getElementById('current-month').textContent = monthYear;\n        document.getElementById('nav-month').textContent = monthYear;\n    }\n\n    formatDate(date) {\n        const day = String(date.getDate()).padStart(2, '0');\n        const month = String(date.getMonth() + 1).padStart(2, '0');\n        const year = date.getFullYear();\n        return `${day}/${month}/${year}`;\n    }\n\n    formatDateTime(date) {\n        const dateStr = this.formatDate(date);\n        const timeStr = date.toLocaleTimeString('en-US', {\n            hour: '2-digit',\n            minute: '2-digit',\n            hour12: false\n        });\n        return `${dateStr} ${timeStr}`;\n    }\n\n    // Storage Functions\n    loadFromStorage() {\n        try {\n            const stored = localStorage.getItem('payroll-forms');\n            return stored ? JSON.parse(stored) : {};\n        } catch (error) {\n            console.error('Error loading from storage:', error);\n            return {};\n        }\n    }\n\n    saveToStorage() {\n        try {\n            localStorage.setItem('payroll-forms', JSON.stringify(this.forms));\n            this.updateLastUpdated();\n        } catch (error) {\n            console.error('Error saving to storage:', error);\n            this.showToast('Error saving data', 'error');\n        }\n    }\n\n    autoSave() {\n        // Debounced auto-save\n        clearTimeout(this.saveTimeout);\n        this.saveTimeout = setTimeout(() => {\n            this.saveAllForms();\n        }, 1000);\n    }\n\n    saveAllForms() {\n        const textareas = document.querySelectorAll('.form-textarea');\n        textareas.forEach(textarea => {\n            const formId = textarea.dataset.formId;\n            if (formId && this.forms[formId]) {\n                this.forms[formId].content = textarea.value;\n                this.forms[formId].lastModified = new Date().toISOString();\n            }\n        });\n        this.saveToStorage();\n    }\n\n    updateLastUpdated() {\n        const lastUpdated = new Date().toLocaleString();\n        document.getElementById('last-updated').textContent = lastUpdated;\n    }\n\n    // Form Management Functions\n    getMonthKey(date = this.currentMonth) {\n        return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n    }\n\n    getCurrentMonthForms() {\n        const monthKey = this.getMonthKey();\n        return Object.values(this.forms).filter(form =>\n            form.monthKey === monthKey\n        ).sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n    }\n\n    async addNewForm() {\n        const now = new Date();\n        const formId = `form_${now.getTime()}`;\n        const monthKey = this.getMonthKey();\n\n        const newForm = {\n            id: formId,\n            createdAt: now.toISOString(),\n            lastModified: now.toISOString(),\n            monthKey: monthKey,\n            content: '',\n            date: this.formatDate(now)\n        };\n\n        this.forms[formId] = newForm;\n        // await this.saveToExcel();\n        this.renderForms();\n        this.updateStats();\n\n        setTimeout(() => {\n            const newTextarea = document.querySelector(`[data-form-id=\"${formId}\"]`);\n            if (newTextarea) {\n                newTextarea.focus();\n            }\n        }, 100);\n\n        this.showToast('New form added successfully!');\n    }\n\n    async deleteForm(formId) {\n        if (this.forms[formId]) {\n            delete this.forms[formId];\n            await this.saveToExcel();\n            this.renderForms();\n            this.updateStats();\n            this.showToast('Form deleted successfully!');\n        }\n    }\n\n    async duplicateForm(formId) {\n        if (this.forms[formId]) {\n            const originalForm = this.forms[formId];\n            const now = new Date();\n            const newFormId = `form_${now.getTime()}`;\n\n            const duplicatedForm = {\n                ...originalForm,\n                id: newFormId,\n                createdAt: now.toISOString(),\n                lastModified: now.toISOString(),\n                date: this.formatDate(now)\n            };\n\n            this.forms[newFormId] = duplicatedForm;\n            await this.saveToExcel();\n            this.renderForms();\n            this.updateStats();\n            this.showToast('Form duplicated successfully!');\n        }\n    }\n\n    // Navigation Functions\n    changeMonth(direction) {\n        this.currentMonth.setMonth(this.currentMonth.getMonth() + direction);\n        this.updateCurrentMonth();\n        this.renderForms();\n    }\n\n    goToToday() {\n        this.currentMonth = new Date();\n        this.updateCurrentMonth();\n        this.renderForms();\n    }\n\n    // Rendering Functions\n    renderForms() {\n        const formsContainer = document.getElementById('forms-container');\n        const emptyState = document.getElementById('empty-state');\n        const currentMonthForms = this.getCurrentMonthForms();\n        const isCurrentMonth = this.isCurrentMonth();\n\n        formsContainer.innerHTML = '';\n\n        if (currentMonthForms.length === 0) {\n            emptyState.classList.remove('hidden');\n        } else {\n            emptyState.classList.add('hidden');\n            currentMonthForms.forEach(form => {\n                const formElement = document.createElement('div');\n                formElement.className = 'form-entry';\n                formElement.innerHTML = `\n                    <div class=\"form-header\">\n                        <div class=\"form-date\">Added on: ${form.date}</div>\n                        <div class=\"form-actions\">\n                            <button ${!isCurrentMonth ? 'disabled' : `onclick=\"formSystem.duplicateForm('${form.id}')\"`}>Duplicate</button>\n                            <button ${!isCurrentMonth ? 'disabled' : `onclick=\"formSystem.deleteForm('${form.id}')\"`}>Delete</button>\n                        </div>\n                    </div>\n                    <div class=\"form-content\">\n                        <textarea class=\"form-textarea\" data-form-id=\"${form.id}\" ${!isCurrentMonth ? 'readonly' : ''} placeholder=\"Enter your comment here...\">${form.content}</textarea>\n                    </div>\n                `;\n                formsContainer.appendChild(formElement);\n            });\n        }\n\n        // Désactiver le bouton \"Add New Message\" si ce n'est pas le mois courant\n        document.querySelector('.btn-primary').disabled = !isCurrentMonth;\n    }\n\n    // Statistics Functions\n    updateStats() {\n        const totalForms = Object.keys(this.forms).length;\n        const monthForms = this.getCurrentMonthForms().length;\n\n        document.getElementById('total-forms').textContent = totalForms;\n        document.getElementById('month-forms').textContent = monthForms;\n    }\n\n    // Toast Notification\n    showToast(message, type = 'success') {\n        const toast = document.getElementById('toast');\n        const toastMessage = document.getElementById('toast-message');\n        toastMessage.textContent = message;\n        toast.className = `toast ${type}`;\n        toast.classList.add('show');\n\n        setTimeout(() => {\n            toast.classList.remove('show');\n        }, 3000);\n    }\n\n    // Export Functions\n    exportData() {\n        const exportModal = document.getElementById('export-modal');\n        exportModal.classList.add('show');\n    }\n\n    closeExportModal() {\n        const exportModal = document.getElementById('export-modal');\n        exportModal.classList.remove('show');\n    }\n\n    exportToJSON() {\n        const dataStr = JSON.stringify(this.forms, null, 2);\n        const dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr);\n\n        const exportFileDefaultName = 'payroll-forms.json';\n        const linkElement = document.createElement('a');\n        linkElement.setAttribute('href', dataUri);\n        linkElement.setAttribute('download', exportFileDefaultName);\n        linkElement.click();\n        this.closeExportModal();\n    }\n\n    exportToCSV() {\n        const currentMonthForms = this.getCurrentMonthForms();\n        let csv = 'id,createdAt,lastModified,monthKey,content,date\\n';\n        currentMonthForms.forEach(form => {\n            csv += `\"${form.id}\",\"${form.createdAt}\",\"${form.lastModified}\",\"${form.monthKey}\",\"${form.content.replace(/\"/g, '\"\"')}\",\"${form.date}\"\\n`;\n        });\n\n        const dataUri = 'data:text/csv;charset=utf-8,' + encodeURIComponent(csv);\n        const monthYear = this.getMonthKey(this.currentMonth);\n        const exportFileDefaultName = `payroll-forms-${monthYear}.csv`;\n\n        const linkElement = document.createElement('a');\n        linkElement.setAttribute('href', dataUri);\n        linkElement.setAttribute('download', exportFileDefaultName);\n        linkElement.click();\n        this.closeExportModal();\n    }\n\n    exportToText() {\n        let text = '';\n        Object.values(this.forms).forEach(form => {\n            text += `ID: ${form.id}\\nCreated At: ${form.createdAt}\\nLast Modified: ${form.lastModified}\\nMonth: ${form.monthKey}\\nDate: ${form.date}\\nContent: ${form.content}\\n\\n`;\n        });\n\n        const dataUri = 'data:text/plain;charset=utf-8,' + encodeURIComponent(text);\n        const exportFileDefaultName = 'payroll-forms.txt';\n\n        const linkElement = document.createElement('a');\n        linkElement.setAttribute('href', dataUri);\n        linkElement.setAttribute('download', exportFileDefaultName);\n        linkElement.click();\n        this.closeExportModal();\n    }\n\n    clearAllData() {\n        if (confirm('Are you sure you want to clear all data?')) {\n            this.forms = {};\n            this.saveToStorage();\n            this.renderForms();\n            this.updateStats();\n            this.showToast('All data cleared successfully!');\n        }\n    }\n}\n\nasync function loadFromExcel() {\n    try {\n        await Excel.run(async (context) => {\n            const sheet = context.workbook.worksheets.getActiveWorksheet();\n            const range = sheet.getUsedRange();\n            range.load(\"values\");\n            await context.sync();\n\n            // Convertir les données de la feuille en un format utilisable\n            const data = range.values;\n            const headers = data[0];\n            const forms = {};\n\n            for (let i = 1; i < data.length; i++) {\n                const row = data[i];\n                const form = {};\n                for (let j = 0; j < headers.length; j++) {\n                    form[headers[j]] = row[j];\n                }\n                forms[form.id] = form;\n            }\n\n            return forms;\n        });\n    } catch (error) {\n        console.error(\"Error loading data from Excel:\", error);\n        OfficeHelpers.Utilities.log(error);\n    }\n}\n\nasync function saveToExcel(forms) {\n    try {\n        await Excel.run(async (context) => {\n            const sheet = context.workbook.worksheets.getActiveWorksheet();\n            sheet.getUsedRange().clear();\n\n            // Préparer les données pour la feuille Excel\n            const data = [[\"id\", \"content\", \"date\"]]; // En-têtes\n            Object.values(forms).forEach(form => {\n                data.push([form.id, form.content, form.date]);\n            });\n\n            // Écrire les données dans la feuille\n            const range = sheet.getRangeByIndexes(0, 0, data.length, data[0].length);\n            range.values = data;\n            await context.sync();\n        });\n    } catch (error) {\n        console.error(\"Error saving data to Excel:\", error);\n        OfficeHelpers.Utilities.log(error);\n    }\n}\n\n\n// Initialize the form management system\nconst formSystem = new FormManagementSystem();","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"./taskpane.js\", import.meta.url);\n// Module\nvar code = \"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\"> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>Payroll Form Management System</title> <link rel=\\\"stylesheet\\\" href=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\"> </head> <body> <div class=\\\"container\\\"> <header class=\\\"main-header\\\"> <h1 class=\\\"system-title\\\">PAYROLL SYSTEM - <span id=\\\"current-month\\\"></span></h1> <div class=\\\"current-date\\\">Today is: <span id=\\\"current-date\\\"></span></div> </header> <div class=\\\"control-panel\\\"> <button class=\\\"btn btn-primary btn-uniform\\\" onclick=\\\"formSystem.addNewForm()\\\"> <i class=\\\"icon\\\">📝</i> Add New Message </button> <button class=\\\"btn btn-secondary btn-uniform\\\" onclick=\\\"formSystem.goToToday()\\\"> <i class=\\\"icon\\\">📅</i> Go to Today </button> <button class=\\\"btn btn-tertiary btn-uniform\\\" onclick=\\\"formSystem.exportData()\\\"> <i class=\\\"icon\\\">💾</i> Export Data </button> <button class=\\\"btn btn-quaternary btn-uniform\\\" onclick=\\\"formSystem.clearAllData()\\\"> <i class=\\\"icon\\\">🗑️</i> Clear All </button> </div> <div class=\\\"month-navigation\\\"> <button class=\\\"nav-btn\\\" onclick=\\\"formSystem.changeMonth(-1)\\\"> <i class=\\\"icon\\\">◀</i> Previous Month </button> <span class=\\\"current-month-display\\\" id=\\\"nav-month\\\"></span> <button class=\\\"nav-btn\\\" onclick=\\\"formSystem.changeMonth(1)\\\"> Next Month <i class=\\\"icon\\\">▶</i> </button> </div> <div class=\\\"forms-container\\\" id=\\\"forms-container\\\"> </div> <div class=\\\"empty-state\\\" id=\\\"empty-state\\\"> <div class=\\\"empty-state-content\\\"> <div class=\\\"empty-icon\\\">📝</div> <h2>No updates for this month</h2> <p>Click \\\"Add New Update\\\" to create your first update</p> <button class=\\\"btn btn-primary btn-large\\\" onclick=\\\"formSystem.addNewForm()\\\"> Add Your First Update </button> </div> </div> <div class=\\\"stats-panel\\\" id=\\\"stats-panel\\\"> <div class=\\\"stat-item\\\"> <span class=\\\"stat-label\\\">Total Forms:</span> <span class=\\\"stat-value\\\" id=\\\"total-forms\\\">0</span> </div> <div class=\\\"stat-item\\\"> <span class=\\\"stat-label\\\">This Month:</span> <span class=\\\"stat-value\\\" id=\\\"month-forms\\\">0</span> </div> <div class=\\\"stat-item\\\"> <span class=\\\"stat-label\\\">Last Updated:</span> <span class=\\\"stat-value\\\" id=\\\"last-updated\\\">Never</span> </div> </div> </div> <div class=\\\"toast\\\" id=\\\"toast\\\"> <div class=\\\"toast-content\\\"> <span class=\\\"toast-message\\\" id=\\\"toast-message\\\"></span> <button class=\\\"toast-close\\\" onclick=\\\"formSystem.hideToast()\\\">&times;</button> </div> </div> <div class=\\\"modal\\\" id=\\\"export-modal\\\"> <div class=\\\"modal-content\\\"> <div class=\\\"modal-header\\\"> <h2>Export Data</h2> <button class=\\\"modal-close\\\" onclick=\\\"formSystem.closeExportModal()\\\">&times;</button> </div> <div class=\\\"modal-body\\\"> <p>Choose export format:</p> <div class=\\\"export-options\\\"> <button class=\\\"btn btn-secondary\\\" onclick=\\\"formSystem.exportToCSV()\\\"> <i class=\\\"icon\\\">📊</i> Export as CSV </button> </div> </div> </div> </div> <div class=\\\"modal\\\" id=\\\"confirm-modal\\\"> <div class=\\\"modal-content\\\"> <div class=\\\"modal-header\\\"> <h2>Confirm Action</h2> </div> <div class=\\\"modal-body\\\"> <p id=\\\"confirm-message\\\"></p> <div class=\\\"modal-actions\\\"> <button class=\\\"btn btn-danger\\\" id=\\\"confirm-yes\\\">Yes, Delete</button> <button class=\\\"btn btn-secondary\\\" onclick=\\\"formSystem.closeConfirmModal()\\\">Cancel</button> </div> </div> </div> </div> <\" + \"script src=\\\"\" + ___HTML_LOADER_IMPORT_1___ + \"\\\"><\" + \"/script> </body> </html> \";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","g","globalThis","this","Function","e","window","o","obj","prop","Object","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","t","r","Symbol","n","iterator","toStringTag","c","Generator","u","create","_regeneratorDefine2","f","y","G","v","a","d","bind","l","TypeError","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","defineProperty","enumerable","configurable","writable","_invoke","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_defineProperties","_toPropertyKey","key","_typeof","toPrimitive","String","_toPrimitive","FormManagementSystem","_classCallCheck","currentMonth","Date","forms","loadFromStorage","init","_this","updateCurrentDate","updateCurrentMonth","renderForms","updateStats","setupEventListeners","setInterval","_loadFromExcel2","_callee","_context","loadFromExcel","_saveToExcel2","_callee2","_context2","saveToExcel","_this2","addEventListener","target","classList","contains","isCurrentMonth","autoSave","shiftKey","preventDefault","textarea","start","selectionStart","end","selectionEnd","substring","now","getElementById","textContent","toLocaleDateString","weekday","year","month","day","currentDate","getMonth","getFullYear","monthYear","concat","date","getDate","padStart","dateStr","formatDate","timeStr","toLocaleTimeString","hour","minute","hour12","stored","localStorage","getItem","JSON","parse","error","console","setItem","stringify","updateLastUpdated","showToast","_this3","clearTimeout","saveTimeout","setTimeout","saveAllForms","_this4","querySelectorAll","forEach","formId","dataset","content","lastModified","toISOString","saveToStorage","lastUpdated","toLocaleString","monthKey","getMonthKey","values","filter","form","sort","createdAt","_addNewForm","_callee3","newForm","_context3","getTime","id","newTextarea","querySelector","focus","_deleteForm","_callee4","_context4","_x","_duplicateForm","_callee5","originalForm","newFormId","duplicatedForm","_context5","_objectSpread","_x2","direction","setMonth","formsContainer","emptyState","currentMonthForms","getCurrentMonthForms","innerHTML","remove","add","formElement","createElement","className","appendChild","disabled","totalForms","keys","monthForms","message","type","toast","dataStr","dataUri","encodeURIComponent","linkElement","setAttribute","click","closeExportModal","csv","exportFileDefaultName","text","confirm","_loadFromExcel3","_callee7","_t","_context7","Excel","run","_ref","_callee6","context","sheet","range","data","headers","row","j","_context6","workbook","worksheets","getActiveWorksheet","getUsedRange","load","sync","_x4","OfficeHelpers","Utilities","log","_x3","_saveToExcel3","_callee9","_t2","_context9","_ref2","_callee8","_context8","clear","push","getRangeByIndexes","_x5","URL"],"sourceRoot":""}